trigger: none

pool:
  name: $(build-agent)

schedules:
  # Switch off pre-midnight runs for now, devs still working/releasing
  #  and the e2e tests runs use up agents and otherwise confound releases

  # # run every 15 minutes between 7pm and 11:45pm
  # - cron: "*/15 19-23 * * *"
  #   displayName: Cron schedule after work and before midnight
  #   branches:
  #     include:
  #       - main
  #   always: true
  # run every 15 minutes between midnight and 2:45pm

  - cron: "*/15 00-02 * * *"
    displayName: Cron schedule after midnight before 3am cleardown operations
    branches:
      include:
        - main
    always: true
  # run every 15 minutes between 4am and 6:45pm
  - cron: "*/15 04-06 * * *"
    displayName: Cron schedule after 3am cleardown operations
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: PolarisMain
      type: github
      endpoint: CPS-Innovation
      name: CPS-Innovation/Polaris
      ref: refs/heads/main

steps:
  - checkout: PolarisMain
    clean: true
    persistCredentials: true
    fetchDepth: 1
    displayName: "Checkout polaris-e2e"

  - task: Bash@3
    inputs:
      targetType: "inline"
      script: "env | sort"

  - task: Npm@1
    inputs:
      command: "install"
      workingDir: "polaris-e2e"
    displayName: "npm install"

  - task: Npm@1
    env:
      CYPRESS_CLIENTSECRET: "$(cypress_clientsecret)"
      CYPRESS_AD_USERNAME: "$(cypress_ad_username)"
      CYPRESS_AD_PASSWORD: "$(cypress_ad_password)"
      CYPRESS_ENVIRONMENT: "$(cypress_environment)"
      CYPRESS_PRE_SEARCH_DELAY_MS: "$(cypress_pre_search_delay_ms)"
    inputs:
      command: "custom"
      workingDir: "polaris-e2e"
      customCommand: "run cy:ci"
    displayName: "cypress run tests"

  - task: PublishBuildArtifacts@1
    condition: always() # this step will always run, helpful to diagnose failing cypress tests
    inputs:
      PathtoPublish: "polaris-e2e/cypress/videos"
      ArtifactName: "Cypress failure vidoes"
      publishLocation: "Container"

  - task: PublishBuildArtifacts@1
    condition: always() # this step will always run, helpful to diagnose failing cypress tests
    inputs:
      PathtoPublish: "polaris-e2e/cypress/screenshots"
      ArtifactName: "Cypress failure screenshots"
      publishLocation: "Container"
