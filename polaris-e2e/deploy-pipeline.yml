schedules:
  - cron: "0 7 * * *"
    displayName: Daily pre-working-day run
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: PolarisTagged
      type: github
      endpoint: CPS-Innovation
      name: CPS-Innovation/Polaris
      ref: refs/tags/$(cypress_environment)

steps:
  - checkout: PolarisTagged
    clean: true
    persistCredentials: true
    fetchDepth: 1
    lfs: true
    submodules: true
    displayName: "Checkout polaris-e2e at $(cypress_environment) tag"

  - task: Bash@3
    inputs:
      targetType: "inline"
      script: "env | sort"

  - task: Npm@1
    inputs:
      command: "install"
      workingDir: "polaris-e2e"
    displayName: "npm install"

  - task: Npm@1
    env:
      CYPRESS_CLIENTSECRET: "$(cypress_clientsecret)"
      CYPRESS_AD_USERNAME: "$(cypress_ad_username)"
      CYPRESS_AD_PASSWORD: "$(cypress_ad_password)"
      CYPRESS_ENVIRONMENT: "$(cypress_environment)"
    inputs:
      command: "custom"
      workingDir: "polaris-e2e"
      customCommand: "run cy:ci"
    displayName: "cypress run tests"

  - task: PublishBuildArtifacts@1
    condition: always() # this step will always run, helpful to diagnose failing cypress tests
    inputs:
      PathtoPublish: "polaris-e2e/cypress/videos"
      ArtifactName: "Cypress failure vidoes"
      publishLocation: "Container"

  - task: PublishBuildArtifacts@1
    condition: always() # this step will always run, helpful to diagnose failing cypress tests
    inputs:
      PathtoPublish: "polaris-e2e/cypress/screenshots"
      ArtifactName: "Cypress failure screenshots"
      publishLocation: "Container"
