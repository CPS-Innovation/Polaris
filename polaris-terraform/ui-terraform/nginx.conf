load_module modules/ngx_http_js_module.so;
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {}

http {
  js_import templates/nginx.js;
	log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';
	access_log  /var/log/nginx/access.log upstreamlog;

  server {
    resolver ${RESOLVER} valid=30s;
    listen 80;
    server_name ${WEBSITE_HOSTNAME};
    location / {
      sub_filter_once off;
      sub_filter ${UPSTREAM_HOSTNAME} ${WEBSITE_HOSTNAME};
	  sub_filter OR2225 ${WEBSITE_HOSTNAME};
      proxy_redirect     off;
      proxy_ssl_server_name on;
      proxy_set_header Host ${UPSTREAM_HOSTNAME}:443;
      proxy_set_header X-Forwarded-For $remote_addr;

      proxy_pass https://${UPSTREAM_HOST};
    }
    location /api {
	  sub_filter_once off;
      sub_filter ${API_ENDPOINT} ${WEBSITE_HOSTNAME};
	  sub_filter_types *;
      proxy_redirect off;
      proxy_ssl_server_name on;
      proxy_set_header Host ${API_ENDPOINT}:443;
      proxy_set_header X-Forwarded-For $remote_addr;

      proxy_pass https://${API_ENDPOINT}/api/;
    }
#	location /api-auth-handover { 
#      sub_filter_once off;
#      proxy_redirect off;
#      proxy_ssl_server_name on;
#      proxy_set_header Host fa-polaris-dev-auth-handover.azurewebsites.net:443;
#      proxy_set_header X-Forwarded-For $remote_addr;
#
#      proxy_pass https://fa-polaris-dev-auth-handover.azurewebsites.net;
#   }
#	location /fa-polaris-dev-gateway {
#			proxy_pass https://fa-polaris-dev-gateway.azurewebsites.net;
#	}
#   location /fa-polaris-dev-auth-handover {
#			proxy_pass https://fa-polaris-dev-auth-handover.azurewebsites.net/api/init;
#   }
	location /api/init {
	  proxy_pass https://fa-polaris-dev-auth-handover.azurewebsites.net/api/init/;
	}
    location /polaris-dev-login {
        proxy_pass ${DDEI_ENDPOINT};
    }
    location /polaris {
      js_content nginx.fetch;
    }
  }
}