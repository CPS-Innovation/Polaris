load_module modules/ngx_http_js_module.so;
user  nginx;
worker_processes  auto;

error_log  /dev/stderr debug;
pid        /var/run/nginx.pid;

events {}

http {
  js_import templates/nginx.js;
	access_log  /dev/stdout;

  # Notes on proxy_pass:
  # 1) If the string passed to the proxy_pass directive DOES NOT have a slash in it: 
  #     location /foo/ {
  #         proxy_pass http://other-host; # WITHOUT A TRAILING SLASH
  #      }
  #     then http://host/foo/bar will direct to http://other-host/foo/bar (note /foo/ in path)

  #    If the string passed to the proxy_pass directive DOES have a slash in it: 
  #     location /foo/ {
  #         proxy_pass http://other-host/; # WITH A TRAILING SLASH
  #      }
  #     then http://host/foo/bar will direct to http://other-host/bar (note no /foo/ in path)
  # 2) By default proxy_pass will redirect incoming `location /foo` to incoming `location /foo/`
  server {
    resolver ${RESOLVER} valid=30s;
    listen 80;
    server_name ${WEBSITE_HOSTNAME};
		proxy_request_buffering off;
		proxy_buffering off;
		
    location = / {
      add_header Content-Type text/plain;
      return 200 'Polaris Proxy is online';
    }

    location = /robots933456.txt {
      add_header Content-Type text/plain;
      return 200 'here';
    }

		location /polaris-script.js {
      default_type application/javascript;
			return 200 '';
    }

    # CMS UI traffic
    location /CMS.20.0.04 {

      sub_filter_types *;
      sub_filter_once off;
      sub_filter ${UPSTREAM_CMS_DOMAIN_NAME} $host;
      sub_filter ${UPSTREAM_CMS_MODERN_DOMAIN_NAME} $host;
      sub_filter https:// //;
	
      proxy_redirect     off;
      proxy_ssl_server_name on;

      # proxy_ssl_protocols TLSv1 TLSv1.1;
      # proxy_ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
			proxy_ssl_session_reuse off;
			proxy_ssl_verify off;

      proxy_set_header Host ${UPSTREAM_CMS_DOMAIN_NAME}:443;
      proxy_set_header X-Forwarded-For $remote_addr;

      proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${UPSTREAM_CMS_IP};
    }

	location /CMS.20.0.04/Case/uacdCDTabs.aspx {
      sub_filter_types *;
      sub_filter_once off;
      sub_filter ${UPSTREAM_CMS_DOMAIN_NAME} $host;
      sub_filter ${UPSTREAM_CMS_MODERN_DOMAIN_NAME} $host;
      sub_filter https:// //;

      sub_filter '</html>' '<script src="/polaris-script.js"></script></html>';
			
      proxy_redirect     off;
      proxy_ssl_server_name on;

			proxy_ssl_session_reuse off;
			proxy_ssl_verify off;

      proxy_set_header Host ${UPSTREAM_CMS_DOMAIN_NAME}:443;
      proxy_set_header X-Forwarded-For $remote_addr;

      proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${UPSTREAM_CMS_IP};
	}

    # At development time it is useful to have a path through to CMS Modern
		location / {

      sub_filter_once off;
      sub_filter_types *;
      sub_filter_types text/xml text/css text/javascript;
      sub_filter ${UPSTREAM_CMS_DOMAIN_NAME} ${WEBSITE_HOSTNAME};
      sub_filter ${UPSTREAM_CMS_MODERN_DOMAIN_NAME} ${WEBSITE_HOSTNAME};
      sub_filter https:// //;
 
      proxy_redirect     off;
      proxy_ssl_server_name on;
	  proxy_ssl_session_reuse off;
	  proxy_ssl_verify off;

      proxy_set_header Host ${UPSTREAM_CMS_MODERN_DOMAIN_NAME}:443;
      proxy_set_header X-Forwarded-For $remote_addr;

      proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${UPSTREAM_CMS_MODERN_IP};
    }
   
    # CMS UI -> Polaris cookie handover step 1 (CMS-side redirects to Polaris-side putting cookies in querystring)
    location /polaris {
      js_var $redirectHostAddress ${ENDPOINT_HTTP_PROTOCOL}://$host;
      js_content nginx.polarisAuthRedirect;
    }

    # CMS UI -> Polaris cookie handover step 2 (Polaris-side receives redirect with cookies in querystring)
    location /api/init {
      proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${AUTH_HANDOVER_ENDPOINT_DOMAIN_NAME};
    }

    # Polaris UI
    location /${APP_SUBFOLDER_PATH} {
      proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${APP_ENDPOINT_DOMAIN_NAME};
    }

    # Polaris gateway API traffic
    location /api/ {
      sub_filter_once off;
      # We need to translate gateway-specific URLs found in API responses
      #  to proxy URLs (important in pipeline tracker polling flow where pipeline initiation call returns a polling address)
      sub_filter ${API_ENDPOINT_DOMAIN_NAME} $host;
      # By default nginx will only filter/transpose in html documents, so we include .json API
      #  responses by setting wildcard to filter all response content types
	  sub_filter_types *;
      proxy_redirect off;
      proxy_ssl_server_name on;
      proxy_set_header Host ${API_ENDPOINT_DOMAIN_NAME}:443;
      proxy_set_header X-Forwarded-For $remote_addr;

      proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${API_ENDPOINT_DOMAIN_NAME};
    }

    # Development-time alternative CMS login page (allows non IETab mode users to achieve CMS session log in)
    location /dev-login/ {
        proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${DDEI_ENDPOINT_DOMAIN_NAME}/api/login?code=${DDEI_ENDPOINT_FUNCTION_APP_KEY};
    }

    # Development-time alternative CMS login page (allows non IETab mode users to achieve CMS session log in)
    location /api/dev-login-full-cookie/ {
        proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${DDEI_ENDPOINT_DOMAIN_NAME}/api/login-full-cookie?code=${DDEI_ENDPOINT_FUNCTION_APP_KEY};
    }

    # internal-only route to CMS Classic, used by DDEI
    location /internal-implementation/CMS.20.0.04/ {
      sub_filter_once off;
      sub_filter ${UPSTREAM_CMS_IP} $host;
      sub_filter ${UPSTREAM_CMS_DOMAIN_NAME} $host;
      proxy_redirect     off;
      proxy_ssl_server_name on;
      proxy_set_header Host ${UPSTREAM_CMS_DOMAIN_NAME}:443;
      proxy_set_header X-Forwarded-For $remote_addr;

      proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${UPSTREAM_CMS_IP}/CMS.20.0.04/;
    }

    # internal-only route to CMS Modern, used by DDEI
    location /internal-implementation/modern/ {
      proxy_pass ${ENDPOINT_HTTP_PROTOCOL}://${UPSTREAM_CMS_MODERN_IP}/;
    }
  }
}