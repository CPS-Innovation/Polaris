parameters:
  terraformVersion: ''
  storageAccountName: ''
  terraformContainerName: ''
  terraformStateKey: ''
  terraformAccessKey: ''
  workingDirectory: ''

stages:
  - stage: Validate
    #condition: eq(variables['Build.SourceBranch'],'refs/heads/main')
    displayName: CD > Basic Validation
    jobs:
      - job:
        pool:
          vmImage: ubuntu-latest
        steps:
          # Install Terraform based on version variable
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: Terraform > Install
            inputs:
              terraformVersion: ${{ parameters.terraformVersion }}

          # Terraform Init
          - bash: |
              terraform init \
                -backend-config="storage_account_name=$TF_STATE_ACCOUNT_NAME" \
                -backend-config="container_name=$TF_STATE_CONTAINER_NAME" \
                -backend-config="key=$TF_STATE_KEY" \
                -backend-config="access_key=$TF_STATE_ACCESS_KEY"
            displayName: Terraform > Init
            workingDirectory: ${{ parameters.workingDirectory }}
            env:
              TF_STATE_ACCOUNT_NAME: ${{ parameters.storageAccountName }}
              TF_STATE_CONTAINER_NAME: ${{ parameters.terraformContainerName }}
              TF_STATE_KEY: ${{ parameters.terraformStateKey }}
              TF_STATE_ACCESS_KEY: ${{ parameters.terraformAccessKey }}

          # Format check
          - bash: terraform fmt -check
            workingDirectory: ${{ parameters.workingDirectory }}
            displayName: Terraform > Check Formatting

          # Validate
          - bash: terraform validate
            displayName: Terraform > Validate Config
            workingDirectory: ${{ parameters.workingDirectory }}