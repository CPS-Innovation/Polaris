let LongRunningTransactionBoundaryMs = 20000;

let Base = AppTraces
| where AppRoleName in ("fa-polaris-text-extractor", "fa-polaris-coordinator")
| where OperationName in ("ExtractText", "RefreshDocumentOrchestratorNext",  "RefreshDocumentOrchestrator")
| where Message contains "GetOcrResultsAsync"
| where Message contains "OCR read" or Message contains "OCR completed"
| project 
    TimeGenerated, 
    OperationId,
    Message    
;

let Starts = Base
| where Message contains "OCR completed"
| extend EventualDurationMs = toint(extract("in (\\d+)ms", 1, Message))
| project 
    TransactionTimeGenerated = datetime_add('millisecond',-1 * EventualDurationMs, TimeGenerated),
    TransactionCount = toint(extract("pages: (\\d+)", 1, Message)),
    EventualDurationMs,
    IsLongRunningTransaction = EventualDurationMs >= LongRunningTransactionBoundaryMs,
    StartCount = 1,
    EndCount = 0;

let Polls = Base
| where Message contains "OCR read"
| project 
    TransactionTimeGenerated = TimeGenerated,
    TransactionCount = int(1),
    EventualDurationMs = int(null),
    IsLongRunningTransaction = false,
    StartCount = 0,
    EndCount = iif(Message contains "Succeeded", 1, 0);

union 
    Starts,
    Polls
| summarize 
    TransactionUnitCount = sum(TransactionCount), 
    EventualDocumentProcessingDurationMs = make_set_if(EventualDurationMs, not(isempty(EventualDurationMs))), 
    EventualLongRunningDocumentProcessingStartCount = countif(IsLongRunningTransaction),
    DocumentProcessingStartCount=sum(StartCount),
    DocumentProcessingEndCount = sum(EndCount)
by bin(TransactionTimeGenerated, 1s)
| order by TransactionTimeGenerated asc 
| where TransactionTimeGenerated between (datetime(2024-05-10T09:30Z) .. datetime(2024-05-10T11:00Z))
| extend InFlightDocumentsBeingProcessed = row_cumsum( DocumentProcessingStartCount - DocumentProcessingEndCount)


