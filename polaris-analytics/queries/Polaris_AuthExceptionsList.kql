let isKnownAuthBug = (
    method: dynamic, 
    exceptionType: dynamic, 
    outerMessage: dynamic, 
    innermostMessage:dynamic, 
    operationName: dynamic, 
    cmsStatusCode: dynamic,
    urn: dynamic,
    loadBalancedDestination: dynamic ) {

    let me = tostring(method);
    let et = tostring(exceptionType);
    let om = tostring(outerMessage);
    let im = tostring(innermostMessage);
    let op = tostring(operationName);
    let csc = tostring(cmsStatusCode);
    let u = tostring(urn);
    let lbd = tostring(loadBalancedDestination);

    case(
        csc contains "302" and u contains "InitiateCookies",
        "23611 - Auth fail InitiateCookies",

                csc contains "302" and u notcontains "InitiateCookies",
        "23613 - Auth fail CMS post-InitiateCookies",

        om contains "header or cookie is expected" or im contains "Cms Auth Token cannot be null",
        "Auth fail - missing Cms-Auth-Values",
    "");
};

Polaris_Exceptions_Core
| extend 
    isKnownAuthBug = isKnownAuthBug(Method, ExceptionType, OuterMessage ,InnermostMessage ,OperationName, CmsStatusCode,  Urn, LoadBalancedDestination ),
    PolarisCorrelationId = tostring(PolarisCorrelationId)    
| where AppRoleName !contains "staging"
| where isKnownAuthBug != ''
| where not(isKnownAuthBug == "Auth fail - missing Cms-Auth-Values" and User == "")
// filter out e2e tests that are intentionally omitting CmsAuthValues
