# Setting env variables in production
# ===================================
# Env variables are compiled into the minified production JS code during the build pipeline process.
# The configuration for web apps is managed via terraform creating app/config settings - this is managed
# as part of the terraform release pipeline. The compilation of code has no visibility of these 
# per-environment configuration settings (one build emerges from the build process which is deployed to
# many environments and so the configuration has to be inserted at a point later in the deployment process).
#
# To connect the configuration values set via terraform to the deployed JS code the following approach is used:
# - Env variables are written in this file using the format REACT_APP_SOME_SETTING=--REACT_APP_SOME_SETTING--
# - The node script in public/subsititute-config.js is called whenever the deployed app is restarted.
#    This script runs on the deployed app container and so has access to the config settings set via terraform.
#    (see terraform/app-service.tf -> resource.azurerm_app_service.as_web_rumpole -> site_config ->
#    app_command_line which executes the script prior to starting the app)
# - The script seeks all instances of --REACT_APP_WHATEVER-- string tokens and substitutes the actual config 
#    values.

REACT_APP_CLIENT_ID=--REACT_APP_CLIENT_ID--
REACT_APP_TENANT_ID=--REACT_APP_TENANT_ID--
REACT_APP_GATEWAY_BASE_URL=--REACT_APP_GATEWAY_BASE_URL--
REACT_APP_GATEWAY_SCOPE=--REACT_APP_GATEWAY_SCOPE--