trigger:
  batch: true
  branches:
    include:
      - "*" # will run on any change, but will only update the scale-set if any changes are merged into "main"
  paths:
    include:
      - polaris-devops-pipelines/scale-set/*

schedules:
  - cron: "0 0 * * 0" # Weekly at Sunday night - ensure the build agent image is up-to-date
    displayName: Weekly Sunday night build-agent refresh
    branches:
      include:
        - main
    always: true
    
variables:
  - group: kv-dev-terraform
  - group: kv-qa-terraform
  - group: kv-prod-terraform
  - group: polaris-build-agent
  - name: "devSubscriptionName"
    value: "Innovation-Development: All-Information Management"
  - name: "qaSubscriptionName"
    value: "Innovation-QA: All-Information Management 2"
  - name: "prodSubscriptionName"
    value: "Innovation-Production: All-Information Management 2"
    
stages:
  - stage: create_version
    displayName: Determine version number
    jobs:
      - job: determine_version
        displayName: Determine version
        steps:
          - template: steps/git-version.yml
            
  - stage: image_builder
    displayName: Build Custom VM Image
    dependsOn: create_version
    variables:
      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
    jobs:
      - job: build
        displayName: Build Image
        steps:
          - template: steps/create-build-agent-image.yml
            parameters:
              clientId: $(innovation-development-spn-client-id)
              clientSecret: $(innovation-development-spn-secret)
              tenantId: $(innovation-development-spn-tenant-id)
              subscriptionId: $(innovation-development-subscription-id)
              subscriptionName: $(devSubscriptionName)
              resourceGroup: $(innovation-development-build-agent-resource-group)
              storageAccount: $(innovation-development-build-agent-storage-account)
              location: $(build-agent-location)
              versionSha: $(versionSha)
              baseImage: "Canonical:0001-com-ubuntu-server-jammy:22_04-lts:linux"
              additionalBuilderParams: '{"vm_size":"Standard_D2_v3"}'
              
  - stage: update_image_gallery_and_scale_set
    displayName: Update All Resources
    dependsOn:
      - create_version
      - image_builder
    variables:
      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
    jobs:
      - job: update
        displayName: Update Resources
        steps:
          - template: steps/update-image-version.yml
            parameters:
              devSubscriptionId: $(innovation-development-subscription-id)
              devSubscriptionName: $(devSubscriptionName)
              devResourceGroup: $(innovation-development-build-agent-resource-group)
              qaSubscriptionId: $(innovation-qa-subscription-id)
              qaSubscriptionName: $(qaSubscriptionName)
              qaResourceGroup: $(innovation-qa-build-agent-resource-group)
              prodSubscriptionId: $(innovation-prod-subscription-id)
              prodSubscriptionName: $(prodSubscriptionName)
              prodResourceGroup: $(innovation-prod-build-agent-resource-group)
              versionSha: $(versionSha)