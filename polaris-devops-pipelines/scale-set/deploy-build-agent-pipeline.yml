---
trigger: none
pr: none

schedules:
  - cron: "0 0 * * 0"  # Weekly at Sunday night - ensure the build agent image is up-to-date
    displayName: Weekly Sunday night build-agent refresh
    branches:
      include:
        - main
    always: true

variables:
  - group: kv-dev-terraform
  - group: kv-qa-terraform
  - group: kv-sbx-terraform
  - group: kv-prod-terraform
  - group: polaris-build-agent
  - group: polaris-global
    
pool:
  vmImage: ubuntu-latest
  
stages:
  - stage: create_version
    displayName: Determine version number
    jobs:
      - job: determine_version
        displayName: Determine version
        steps:
          - template: steps/git-version.yml

  #- stage: image_builder_dev
  #  displayName: DEV - Build Custom VM Image
  #  dependsOn: create_version
  #  pool:
  #    name: $(dev-build-agent)
  #  variables:
  #    versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
  #  jobs:
  #    - job: build
  #      displayName: DEV - Build Image
  #      steps:
  #        - template: steps/get-credentials.yml
  #          parameters:
  #            azureSubscriptionId: $(dev-azure-subscription)
              
  #        - template: steps/create-build-agent-image.yml
  #          parameters:
  #            clientId: $(clientId)
  #            clientSecret: $(clientSecret)
  #            tenantId: $(tenantId)
  #            subscriptionId: $(subscriptionId)
  #            subscriptionName: $(dev-azure-subscription)
  #            resourceGroup: $(innovation-development-build-agent-resource-group)
  #            storageAccount: $(innovation-development-build-agent-storage-account)
  #            versionSha: $(versionSha)
  #            baseImage: "Canonical:0001-com-ubuntu-server-mantic:23_10:linux"
  #            additionalBuilderParams: '{"vm_size":"Standard_D2_v3","virtual_network_resource_group_name":"rg-networking","virtual_network_name":"vnet-innovation-development","virtual_network_subnet_name":"polaris-scale-set-subnet"}'

#  - stage: image_builder_qa
#    displayName: QA - Build Custom VM Image
#    dependsOn: create_version
#    pool:
#      name: $(qa-build-agent)
#    variables:
#      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
#    jobs:
#      - job: build
#        displayName: QA - Build Image
#        steps:
#          - template: steps/get-credentials.yml
#            parameters:
#              azureSubscriptionId: $(qa-azure-subscription)
#
#          - template: steps/create-build-agent-image.yml
#            parameters:
#              clientId: $(clientId)
#              clientSecret: $(clientSecret)
#              tenantId: $(tenantId)
#              subscriptionId: $(subscriptionId)
#              subscriptionName: $(qa-azure-subscription)
#              resourceGroup: $(innovation-qa-build-agent-resource-group)
#              storageAccount: $(innovation-qa-build-agent-storage-account)
#              versionSha: $(versionSha)
#              baseImage: "Canonical:0001-com-ubuntu-server-mantic:23_10:linux"
#              additionalBuilderParams: '{"vm_size":"Standard_D2_v3","virtual_network_resource_group_name":"rg-networking","virtual_network_name":"vnet-innovation-qa","virtual_network_subnet_name":"polaris-scale-set-subnet"}'
              
  - stage: image_builder_sbx
    displayName: SBX - Build Custom VM Image
    dependsOn: create_version
    variables:
      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
    jobs:
      - job: build
        displayName: SBX - Build Image
        steps:
          - template: steps/get-credentials.yml
            parameters:
              azureSubscriptionId: $(sbx-azure-subscription)

          - template: steps/create-build-agent-image.yml
            parameters:
              clientId: $(clientId)
              clientSecret: $(clientSecret)
              tenantId: $(tenantId)
              subscriptionId: $(subscriptionId)
              subscriptionName: $(sbx-azure-subscription)
              resourceGroup: $(innovation-sbx-build-agent-resource-group)
              storageAccount: $(innovation-sbx-build-agent-storage-account)
              versionSha: $(versionSha)
              baseImage: "Canonical:0001-com-ubuntu-server-mantic:23_10:linux"
              additionalBuilderParams: '{"vm_size":"Standard_D2_v3","virtual_network_resource_group_name":"rg-networking","virtual_network_name":"vnet-innovation-uat","virtual_network_subnet_name":"polaris-scale-set-subnet"}'

#  - stage: image_builder_prod
#    displayName: PROD - Build Custom VM Image
#    dependsOn: create_version
#    pool:
#      name: $(prod-build-agent)
#    variables:
#      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
#    jobs:
#      - job: build
#        displayName: PROD - Build Image
#        steps:
#          - template: steps/get-credentials.yml
#            parameters:
#              azureSubscriptionId: $(prod-azure-subscription)
#
#          - template: steps/create-build-agent-image.yml
#            parameters:
#              clientId: $(clientId)
#              clientSecret: $(clientSecret)
#              tenantId: $(tenantId)
#              subscriptionId: $(subscriptionId)
#              subscriptionName: $(prod-azure-subscription)
#              resourceGroup: $(innovation-prod-build-agent-resource-group)
#              storageAccount: $(innovation-prod-build-agent-storage-account)
#              versionSha: $(versionSha)
#              baseImage: "Canonical:0001-com-ubuntu-server-mantic:23_10:linux"
#              additionalBuilderParams: '{"vm_size":"Standard_D2_v3","virtual_network_resource_group_name":"rg-networking","virtual_network_name":"vnet-innovation-production","virtual_network_subnet_name":"polaris-scale-set-subnet"}'

#  - stage: update_scale_set_dev
#    displayName: Update All DEV Resources
#    dependsOn:
#      - create_version
#      - image_builder_dev
#    variables:
#      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
#    jobs:
#      - job: update
#        displayName: Update Resources
#        steps:
#          - template: steps/get-credentials.yml
#            parameters:
#              azureSubscriptionId: $(dev-azure-subscription)
#              
#          - template: steps/update-image-version.yml
#            parameters:
#              clientId: $(clientId)
#              clientSecret: $(clientSecret)
#              tenantId: $(tenantId)
#              subscriptionId: $(subscriptionId)
#              resourceGroup: $(innovation-development-build-agent-resource-group)
#              agentPoolName: $(innovation-development-agent-pool-name)
#              versionSha: $(versionSha)
#
#  - stage: update_scale_set_qa
#    displayName: Update All QA Resources
#    dependsOn:
#      - create_version
#      - image_builder_qa
#    variables:
#      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
#    jobs:
#      - job: update
#        displayName: Update Resources
#        steps:
#          - template: steps/get-credentials.yml
#            parameters:
#              azureSubscriptionId: $(qa-azure-subscription)
#
#          - template: steps/update-image-version.yml
#            parameters:
#              clientId: $(clientId)
#              clientSecret: $(clientSecret)
#              tenantId: $(tenantId)
#              subscriptionId: $(subscriptionId)
#              resourceGroup: $(innovation-qa-build-agent-resource-group)
#              agentPoolName: $(innovation-qa-agent-pool-name)
#              versionSha: $(versionSha)
              
  - stage: update_scale_set_sbx
    displayName: Update All SBX Resources
    dependsOn:
      - create_version
      - image_builder_sbx
    variables:
      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
    jobs:
      - job: update
        displayName: Update Resources
        steps:
          - template: steps/get-credentials.yml
            parameters:
              azureSubscriptionId: $(sbx-azure-subscription)

          - template: steps/update-image-version.yml
            parameters:
              clientId: $(clientId)
              clientSecret: $(clientSecret)
              tenantId: $(tenantId)
              subscriptionId: $(subscriptionId)
              resourceGroup: $(innovation-sbx-build-agent-resource-group)
              agentPoolName: $(innovation-sbx-agent-pool-name)
              versionSha: $(versionSha)

#  - stage: update_scale_set_prod
#    displayName: Update All PROD Resources
#    dependsOn:
#      - create_version
#      - image_builder_prod
#    variables:
#      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
#    jobs:
#      - job: update
#        displayName: Update Resources
#        steps:
#          - template: steps/get-credentials.yml
#            parameters:
#              azureSubscriptionId: $(prod-azure-subscription)
#
#          - template: steps/update-image-version.yml
#            parameters:
#              clientId: $(clientId)
#              clientSecret: $(clientSecret)
#              tenantId: $(tenantId)
#              subscriptionId: $(subscriptionId)
#              resourceGroup: $(innovation-prod-build-agent-resource-group)
#              agentPoolName: $(innovation-prod-agent-pool-name)
#              versionSha: $(versionSha)
