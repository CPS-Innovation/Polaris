parameters:
  devSubscriptionId: ""
  devSubscriptionName: ""
  devResourceGroup: ""
  qaSubscriptionId: ""
  qaSubscriptionName: ""
  qaResourceGroup: ""
  prodSubscriptionId: ""
  prodSubscriptionName: ""
  prodResourceGroup: ""
  versionSha: ""
  devAgentPoolName: "polarisdevagentspool"
  qaAgentPoolName: "polarisqaagentspool"
  prodAgentPoolName: "polarisprodagentspool"


steps:
  - task: AzureCLI@2
    displayName: Create new image version in the gallery
    condition: succeeded()
    inputs:
      azureSubscription: '${{ parameters.devSubscriptionName }}'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $imageCreateResult = az sig image-version create --resource-group ${{ parameters.devResourceGroup }} --gallery-name polaris_build_agent_gallery --gallery-image-definition polaris_build_agent --gallery-image-version 1.0.$(Build.BuildId) --managed-image /subscriptions/${{ parameters.devSubscriptionId }}/resourceGroups/${{ parameters.devResourceGroup }}/providers/Microsoft.Compute/images/build-agent-${{ parameters.versionSha }}
        $imageCreateResultObject = $imageCreateResult | ConvertFrom-Json
        $imageId = $imageCreateResultObject.id

        Write-Host "##vso[task.setvariable variable=ImageId;]$imageId"

  - task: AzureCLI@2
    displayName: DEV - Update Scale Set
    condition: succeeded()
    inputs:
      azureSubscription: '${{ parameters.devSubscriptionName }}'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az vmss update --resource-group ${{ parameters.devResourceGroup }} --name ${{ parameters.devAgentPoolName }} --set virtualMachineProfile.storageProfile.imageReference.id=$(ImageId)
        az vmss update-instances --instance-ids "*" --name ${{ parameters.devAgentPoolName }} --resource-group ${{ parameters.devResourceGroup }} --no-wait
        
  - task: AzureCLI@2
    displayName: QA - Update Scale Set
    condition: succeeded()
    inputs:
      azureSubscription: '${{ parameters.qaSubscriptionName }}'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az vmss update --resource-group ${{ parameters.qaResourceGroup }} --name ${{ parameters.qaAgentPoolName }} --set virtualMachineProfile.storageProfile.imageReference.id=$(ImageId)
        az vmss update-instances --instance-ids "*" --name ${{ parameters.qaAgentPoolName }} --resource-group ${{ parameters.qaResourceGroup }} --no-wait
        
  - task: AzureCLI@2
    displayName: PROD - Update Scale Set
    condition: succeeded()
    inputs:
      azureSubscription: '${{ parameters.prodSubscriptionName }}'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az vmss update --resource-group ${{ parameters.prodResourceGroup }} --name ${{ parameters.prodAgentPoolName }} --set virtualMachineProfile.storageProfile.imageReference.id=$(ImageId)
        az vmss update-instances --instance-ids "*" --name ${{ parameters.prodAgentPoolName }} --resource-group ${{ parameters.prodResourceGroup }} --no-wait