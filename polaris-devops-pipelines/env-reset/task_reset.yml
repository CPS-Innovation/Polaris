---
parameters:
  - name: terraformStorageAccount
    type: string
  - name: terraformContainerName
    type: string
  - name: terraformStateKey
    type: string
  - name: terraformStateAccessKey
  - name: clientId
    type: string
  - name: clientSecret
    type: string
  - name: tenantId
    type: string
  - name: subscriptionId
    type: string
  - name: workingDirectory
    type: string
  - name: targetArea
    type: string
  - name: targetVarFile
    type: string
    
steps:
  - bash: |
      terraform init \
        -backend-config="storage_account_name=$TF_STATE_ACCOUNT_NAME" \
        -backend-config="container_name=$TF_STATE_CONTAINER_NAME" \
        -backend-config="key=$TF_STATE_KEY" \
        -backend-config="access_key=$TF_STATE_ACCESS_KEY"
    displayName: Init > ${{ parameters.targetArea }} Terraform
    workingDirectory: $(System.DefaultWorkingDirectory)/Polaris/polaris-terraform/search-index-terraform
    env:
      TF_STATE_ACCOUNT_NAME: ${{ parameters.terraformStorageAccount }}
      TF_STATE_CONTAINER_NAME: ${{ parameters.terraformContainerName }}
      TF_STATE_KEY: ${{ parameters.terraformStateKey }}
      TF_STATE_ACCESS_KEY: ${{ parameters.terraformStateAccessKey }}
      TF_LOG: "ERROR"

  # Terraform Apply
  - bash: |
      terraform apply -destroy -auto-approve -var-file="$ARM_VAR_FILE.tfvars"
    displayName: Destroy > ${{ parameters.targetArea }}
    workingDirectory: $(System.DefaultWorkingDirectory)/Polaris/polaris-terraform/search-index-terraform
    env:
      ARM_CLIENT_ID: ${{ parameters.clientId }}
      ARM_CLIENT_SECRET: ${{ parameters.clientSecret }}
      ARM_TENANT_ID: ${{ parameters.tenantId }}
      ARM_SUBSCRIPTION_ID: ${{ parameters.subscriptionId }}
      ARM_VAR_FILE: ${{ parameters.targetVarFile }}
      TF_LOG: "ERROR"