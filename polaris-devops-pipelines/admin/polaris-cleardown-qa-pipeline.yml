trigger: none
pr: none

schedules:
  - cron: "0 3 * * *" # First number represent the amount of minutes, second represent the hours. In this case 03:00 Monday - Sunday
    displayName: Clear-down QA Polaris Assets
    branches:
      include:
        - main
    always: true

variables:
  - group: kv-qa-terraform
  - group: polaris-global
  - group: pipeline-terraform

stages:
  - stage: Startup_QA_Build_Agent
    displayName: Start QA Build Agent
    jobs:
      - job: Startup_QA_Build_Agent
        pool:
          vmImage: windows-latest
        steps:
          - task: maikvandergaag.maikvandergaag-trigger-pipeline.TriggerPipeline.TriggerPipeline@2
            displayName: 'Start QA Build Agent'
            inputs:
              serviceConnection: $(build-release-connector)
              project: $(project-id)
              Pipeline: Build
              buildDefinition: 141

  - stage: Clear_down_SearchIndex
    displayName: Reset Search Index
    dependsOn: Startup_QA_Build_Agent
    condition: succeeded()
    jobs:
      - job: Clear_down_SearchIndex
        pool:
          name: $(qa-build-agent)
        steps:
          # Install Terraform based on version variable
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: Terraform > Install
            inputs:
              terraformVersion: $(terraform-version)
                
          # Terraform Init
          - bash: |
              terraform init \
                -backend-config="storage_account_name=$TF_STATE_ACCOUNT_NAME" \
                -backend-config="container_name=$TF_STATE_CONTAINER_NAME" \
                -backend-config="key=$TF_STATE_KEY" \
                -backend-config="access_key=$TF_STATE_ACCESS_KEY"
            displayName: Terraform > Init
            workingDirectory: "$(Pipeline.Workspace)/s/polaris-terraform/pipeline-terraform/"
            env:
              TF_STATE_ACCOUNT_NAME: $(qa-terraform-storage-account)
              TF_STATE_CONTAINER_NAME: $(pipeline-terraform-container-name)
              TF_STATE_KEY: $(terraform-key)
              TF_STATE_ACCESS_KEY: $(cpsqastorageterraform-key1)
                
          # Terraform Plan
          - bash: |
              terraform plan -input=false -out=qa.tfplan -var-file="qa.tfvars" -target="restapi_object.definition" -replace="restapi_object.definition"
            displayName: 'Terraform > Write Pipeline Plan, flagging search index refresh'
            workingDirectory: "$(Pipeline.Workspace)/s/polaris-terraform/pipeline-terraform/"
            env:
              ARM_CLIENT_ID: $(innovation-qa-spn-client-id)
              ARM_CLIENT_SECRET: $(innovation-qa-spn-secret)
              ARM_TENANT_ID: $(innovation-qa-spn-tenant-id)
              ARM_SUBSCRIPTION_ID: $(innovation-qa-subscription-id)
                
          # Terraform Apply
          - bash: |
              terraform apply -auto-approve qa.tfplan
            displayName: Terraform > Refresh Search Index
            workingDirectory: "$(Pipeline.Workspace)/s/polaris-terraform/pipeline-terraform/"
            env:
              ARM_CLIENT_ID: $(innovation-qa-spn-client-id)
              ARM_CLIENT_SECRET: $(innovation-qa-spn-secret)
              ARM_TENANT_ID: $(innovation-qa-spn-tenant-id)
              ARM_SUBSCRIPTION_ID: $(innovation-qa-subscription-id)
                
  - stage: Clear_down_BlobStorage
    displayName: Reset Document Blob Storage
    dependsOn: Clear_down_SearchIndex
    condition: succeeded()
    jobs:
      - job: Clear_down_BlobStorage
        pool:
          name: $(qa-build-agent)
        steps:
          - task: AzureCLI@2
            displayName: Refresh Blob Storage
            inputs:
              connectedServiceNameARM: '$(qa-azure-subscription)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az storage blob delete-batch --account-name $(qa-document-storage-account) --source documents --connection-string '$(cpsdocumentstorage-connection-string)' --delete-snapshots include
                
  #- stage: Shutdown_QA_Build_Agent
  #  displayName: Shutdown QA Build Agent
  # dependsOn: Clear_down_BlobStorage
  #  condition: succeeded()
  #  jobs:
  #    - job: Shutdown_QA_Build_Agent
  #      pool:
  #        vmImage: windows-latest
  #      steps:
  #        - task: maikvandergaag.maikvandergaag-trigger-pipeline.TriggerPipeline.TriggerPipeline@2
  #          displayName: 'Shutdown QA Build Agent'
  #          inputs:
  #            serviceConnection: $(build-release-connector)
  #            project: $(project-id)
  #            Pipeline: Build
  #            buildDefinition: 142