parameters:
  stageName: ""
  displayName: ""
  buildAgent: ""
  buildLabel: ""
  appInsightsKey: ""
  dependsOn: ""
  envLabel: ""
  successText: ""
  statusCheckMethod: ""
  statusCheckRetries: ""
  statusCheckDelay: ""
  statusCheckTimeout: ""
  coordinatorStatusUrl: ""
  pdfGeneratorStatusUrl: ""
  textExtractorStatusUrl: ""
  authHandoverStatusUrl: ""
  gatewayStatusUrl: ""
  proxyStatusUrl: ""
  uiStatusUrl: ""
  
stages:
  - stage: ${{ parameters.stageName }}
    displayName: ${{ parameters.displayName }}
    dependsOn: ${{ parameters.dependsOn }}
    pool:
      name: ${{ parameters.buildAgent }}
    condition: succeeded()
    jobs:
      - job: Run_Status_Checks
        steps:
          #download scripts artifact
          - download: ${{ parameters.buildLabel }}
            displayName: Download Scripts
            artifact: 'polaris-script-files'
            
          #send custom event to AppInsights
          - template: jobs/steps/tasks/send-to-app-insights.yml
            parameters:
              appInsightsKey: "${{ parameters.appInsightsKey }}"
              message: "${{ parameters.envLabel }} Status Checks: Started"
              
          #query coordinator status endpoint
          - task: PowerShell@2
            displayName: 'Checking ${{ parameters.envLabel }} Coordinator status'
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(Pipeline.Workspace)/${{ parameters.buildAgent }}/polaris-script-files/InvokeRequestWithRetry.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI ${{ parameters.coordinatorStatusUrl }}
                -Method ${{ parameters.statusCheckMethod }}
                -SuccessTextContent ${{ parameters.successText }}
                -Retries ${{ parameters.statusCheckRetries }}
                -SecondsDelay ${{ parameters.statusCheckDelay }}
                -TimeoutSec ${{ parameters.statusCheckTimeout }}
    
          #query pdf-generator status endpoint
          - task: PowerShell@2
            displayName: 'Checking ${{ parameters.envLabel }} PDF-Generator status'
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(Pipeline.Workspace)/${{ parameters.buildAgent }}/polaris-script-files/InvokeRequestWithRetry.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI ${{ parameters.pdfGeneratorStatusUrl }}
                -Method ${{ parameters.statusCheckMethod }}
                -SuccessTextContent ${{ parameters.successText }}
                -Retries ${{ parameters.statusCheckRetries }}
                -SecondsDelay ${{ parameters.statusCheckDelay }}
                -TimeoutSec ${{ parameters.statusCheckTimeout }}
    
          #query text-extractor status endpoint
          - task: PowerShell@2
            displayName: 'Checking ${{ parameters.envLabel }} Text-Extractor status'
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(Pipeline.Workspace)/${{ parameters.buildAgent }}/polaris-script-files/InvokeRequestWithRetry.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI ${{ parameters.textExtractorStatusUrl }}
                -Method ${{ parameters.statusCheckMethod }}
                -SuccessTextContent ${{ parameters.successText }}
                -Retries ${{ parameters.statusCheckRetries }}
                -SecondsDelay ${{ parameters.statusCheckDelay }}
                -TimeoutSec ${{ parameters.statusCheckTimeout }}
    
          #query auth-handover status endpoint
          - task: PowerShell@2
            displayName: 'Checking ${{ parameters.envLabel }} Auth-Handover status'
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(Pipeline.Workspace)/${{ parameters.buildAgent }}/polaris-script-files/InvokeRequestWithRetry.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI ${{ parameters.authHandoverStatusUrl }}
                -Method ${{ parameters.statusCheckMethod }}
                -SuccessTextContent ${{ parameters.successText }}
                -Retries ${{ parameters.statusCheckRetries }}
                -SecondsDelay ${{ parameters.statusCheckDelay }}
                -TimeoutSec ${{ parameters.statusCheckTimeout }}
    
          #query gateway status endpoint
          - task: PowerShell@2
            displayName: 'Checking ${{ parameters.envLabel }} Gateway status'
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(Pipeline.Workspace)/${{ parameters.buildAgent }}/polaris-script-files/InvokeRequestWithRetry.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI ${{ parameters.gatewayStatusUrl }}
                -Method ${{ parameters.statusCheckMethod }}
                -SuccessTextContent ${{ parameters.successText }}
                -Retries ${{ parameters.statusCheckRetries }}
                -SecondsDelay ${{ parameters.statusCheckDelay }}
                -TimeoutSec ${{ parameters.statusCheckTimeout }}
    
          #query proxy status endpoint
          - task: PowerShell@2
            displayName: 'Checking ${{ parameters.envLabel }} Proxy status'
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(Pipeline.Workspace)/${{ parameters.buildAgent }}/polaris-script-files/InvokeRequestWithRetryNonNumeric.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI ${{ parameters.proxyStatusUrl }}
                -Method ${{ parameters.statusCheckMethod }}
                -SuccessTextContent "Polaris Proxy is online"
                -Retries ${{ parameters.statusCheckRetries }}
                -SecondsDelay ${{ parameters.statusCheckDelay }}
                -TimeoutSec ${{ parameters.statusCheckTimeout }}
    
          #query proxy status endpoint
          - task: PowerShell@2
            displayName: 'Checking ${{ parameters.envLabel }} UI status'
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(Pipeline.Workspace)/${{ parameters.buildAgent }}/polaris-script-files/InvokeRequestWithRetry.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI ${{ parameters.uiStatusUrl }}
                -Method ${{ parameters.statusCheckMethod }}
                -SuccessTextContent ${{ parameters.successText }}
                -Retries ${{ parameters.statusCheckRetries }}
                -SecondsDelay ${{ parameters.statusCheckDelay }}
                -TimeoutSec ${{ parameters.statusCheckTimeout }}
                
          #send custom event to AppInsights
          - template: jobs/steps/tasks/send-to-app-insights.yml
            parameters:
              appInsightsKey: "${{ parameters.appInsightsKey }}"
              message: "${{ parameters.envLabel }} Status Checks: Completed"
    
            #send any failures to AppInsights  
          - template: jobs/steps/tasks/send-failure-to-app-insights.yml
            parameters:
              appInsightsKey: "${{ parameters.appInsightsKey }}"
              devOpsPatToken: "${{ parameters.devOpsPatToken }}"
              message: "${{ parameters.envLabel }} Create Report: Failed"