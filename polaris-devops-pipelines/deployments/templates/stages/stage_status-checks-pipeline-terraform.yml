---
parameters:
  - name: stageBuildAgent
    type: string
  - name: stageDependsOn
    type: object
  - name: targetBuild
    type: string
  - name: targetLabel
    type: string
  - name: targetName
    type: string
  - name: appInsightsKey
    type: string
  - name: coordinatorStatusUrl
    type: string
  - name: pdfGeneratorStatusUrl
    type: string
  - name: textExtractorStatusUrl
    type: string
  - name: statusCheckMethod
    type: string
  - name: statusCheckRetries
    type: string
  - name: statusCheckDelaySeconds
    type: string
  - name: statusCheckTimeoutSeconds
    type: string
  - name: devOpsPatToken
    type: string
  - name: logResultDependsOn
    type: object

stages:
  - stage: Check_${{ parameters.targetLabel }}
    displayName: Status Checks > ${{ parameters.targetLabel }}
    ${{ if parameters.stageDependsOn }}:
      dependsOn: ${{ parameters.stageDependsOn }}
    condition: succeeded()
    pool:
      name: ${{ parameters.stageBuildAgent }}
    jobs:
      - template: jobs/job_log-start.yml
        parameters:
          targetBuild: ${{ parameters.targetBuild }}
          targetLabel: ${{ parameters.targetLabel }}
          targetName: ${{ parameters.targetName }}
          appInsightsKey: ${{ parameters.appInsightsKey }}

      - template: jobs/job_check-pipeline-components.yml
        parameters:
          targetBuild: ${{ parameters.targetBuild }}
          targetLabel: ${{ parameters.targetLabel }}
          coordinatorStatusUrl: ${{ parameters.coordinatorStatusUrl }}
          pdfGeneratorStatusUrl: ${{ parameters.pdfGeneratorStatusUrl }}
          textExtractorStatusUrl: ${{ parameters.textExtractorStatusUrl }}
          statusCheckMethod: ${{ parameters.statusCheckMethod }}
          statusCheckRetries: ${{ parameters.statusCheckRetries }}
          statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
          statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}
          jobDependsOn:
            - LogStart

      - template: jobs/job_log-result.yml
        parameters:
          targetBuild: ${{ parameters.targetBuild }}
          targetLabel: ${{ parameters.targetLabel }}
          targetName: ${{ parameters.targetName }}
          appInsightsKey: ${{ parameters.appInsightsKey }}
          devOpsPatToken: ${{ parameters.devOpsPatToken }}
          dependsOn: ${{ parameters.logResultDependsOn }}
