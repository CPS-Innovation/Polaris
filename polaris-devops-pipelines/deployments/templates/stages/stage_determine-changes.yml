---
parameters:
  - name: stageBuildAgent
    type: string
  - name: stageDependsOn
    type: object
  - name: targetBuild
    type: string
  - name: targetLabel
    type: string
  - name: targetName
    type: string
  - name: appInsightsKey
    type: string
  - name: devOpsPatToken
    type: string

stages:
  - stage: Determine_Changes_${{ parameters.targetLabel }}
    displayName: Determine Changes> ${{ parameters.targetLabel }}
    ${{ if parameters.stageDependsOn }}:
      dependsOn: ${{ parameters.stageDependsOn }}
    condition: succeeded()
    pool:
      name: ${{ parameters.stageBuildAgent }}
    jobs:
      - template: jobs/job_log-start.yml
        parameters:
          targetBuild: ${{ parameters.targetBuild }}
          targetLabel: ${{ parameters.targetLabel }}
          targetName: ${{ parameters.targetName }}
          appInsightsKey: ${{ parameters.appInsightsKey }}
          
      - job: Generate_Diff_${{ parameters.targetLabel }}
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                $files = $(git diff --name-only --relative --diff-filter AMRD dev HEAD)
                $temp=$files -split ' '
                $count=$temp.Length
                echo "******** Total changed $count files for DEV ********"

                For ($i=0; $i -lt $temp.Length; $i++)
                {
                  $name=$temp[$i]
                  echo "this is $name file"
                  if ($name -like 'polaris-terraform/pipeline-terraform/*')
                  {
                    echo "run pipeline terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TERRAFORM_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_EVENTS_TERRAFORM_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_TERRAFORM_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_EVENTS_TERRAFORM_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_CODEBASE_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_PDF_GENERATOR_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TEXT_EXTRACTOR_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_CODEBASE_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-terraform/pipeline-events-terraform/*')
                  {
                    echo "DEV: run pipeline events terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_EVENTS_TERRAFORM_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-terraform/ui-terraform/*')
                  {
                    echo "DEV: run ui terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_UI_TERRAFORM_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_EVENTS_TERRAFORM_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_CODEBASE_DEV;isOutput=true]true"                    
                  }
                  if ($name -like 'polaris-terraform/ui-events-terraform/*')
                  {
                    echo "DEV: run ui events terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_UI_EVENTS_TERRAFORM_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/*')
                  {
                    echo "DEV: run pipeline codebase..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_CODEBASE_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/coordinator/*')
                  {
                    echo "DEV: run coordinator..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/pdf-generator/*')
                  {
                    echo "DEV: run pdf generator..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_PDF_GENERATOR_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/text-extractor/*')
                  {
                    echo "DEV: run text extractor..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TEXT_EXTRACTOR_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/*' -Or $name -like 'polaris-gateway.tests/*')
                  {
                    echo "DEV: run gateway codebase..."
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/polaris-gateway/*')
                  {
                    echo "DEV: run gateway..."
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/polaris-auth-handover/*')
                  {
                    echo "DEV: run auth handover..."
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-ui/*')
                  {
                    echo "DEV: run ui codebase..."
                    Write-Host "##vso[task.setvariable variable=RUN_UI_CODEBASE_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/DdeiClient/*')
                  {
                    echo "DEV: changes to DdeiClient detected run dependent code-bases..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/Common/*')
                  {
                    echo "DEV: changes to the Pipeline's Common library detected run dependent code-bases..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_PDF_GENERATOR_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TEXT_EXTRACTOR_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_DEV;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/polaris-gateway.common/*')
                  {
                    echo "DEV: changes to the Gateway's Common library detected run dependent code-bases..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_CODEBASE_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_DEV;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_DEV;isOutput=true]true"
                  }
                }

                $files = $(git diff --name-only --relative --diff-filter AMRD qa HEAD)
                $temp=$files -split ' '
                $count=$temp.Length
                echo "******** Total changed $count files for QA ********"

                For ($i=0; $i -lt $temp.Length; $i++)
                {
                  $name=$temp[$i]
                  echo "this is $name file"
                  if ($name -like 'polaris-terraform/pipeline-terraform/*')
                  {
                    echo "QA: run pipeline terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TERRAFORM_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_EVENTS_TERRAFORM_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_TERRAFORM_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_EVENTS_TERRAFORM_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_CODEBASE_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_PDF_GENERATOR_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TEXT_EXTRACTOR_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_CODEBASE_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-terraform/pipeline-events-terraform/*')
                  {
                    echo "QA: run pipeline events terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_EVENTS_TERRAFORM_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-terraform/ui-terraform/*')
                  {
                    echo "QA: run ui terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_UI_TERRAFORM_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_EVENTS_TERRAFORM_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_CODEBASE_QA;isOutput=true]true"                    
                  }
                  if ($name -like 'polaris-terraform/ui-events-terraform/*')
                  {
                    echo "QA: run ui events terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_UI_EVENTS_TERRAFORM_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/*')
                  {
                    echo "QA: run pipeline codebase..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_CODEBASE_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/coordinator/*')
                  {
                    echo "QA: run coordinator..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/pdf-generator/*')
                  {
                    echo "QA: run pdf generator..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_PDF_GENERATOR_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/text-extractor/*')
                  {
                    echo "QA: run text extractor..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TEXT_EXTRACTOR_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/*')
                  {
                    echo "QA: run gateway codebase..."
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/polaris-gateway/*')
                  {
                    echo "QA: run gateway..."
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/polaris-auth-handover/*')
                  {
                    echo "QA: run auth handover..."
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-ui/*')
                  {
                    echo "QA: run ui codebase..."
                    Write-Host "##vso[task.setvariable variable=RUN_UI_CODEBASE_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/DdeiClient/*')
                  {
                    echo "QA: changes to DdeiClient detected run dependent code-bases..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/Common/*')
                  {
                    echo "QA: changes to the Pipeline's Common library detected run dependent code-bases..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_PDF_GENERATOR_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TEXT_EXTRACTOR_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_QA;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/polaris-gateway.common/*')
                  {
                    echo "QA: changes to the Gateway's Common library detected run dependent code-bases..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_CODEBASE_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_QA;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_QA;isOutput=true]true"
                  }
                }

                $files = $(git diff --name-only --relative --diff-filter AMRD prod HEAD)
                $temp=$files -split ' '
                $count=$temp.Length
                echo "******** Total changed $count files for PROD ********"

                For ($i=0; $i -lt $temp.Length; $i++)
                {
                  $name=$temp[$i]
                  echo "this is $name file"
                  if ($name -like 'polaris-terraform/pipeline-terraform/*')
                  {
                    echo "PROD: run pipeline terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TERRAFORM_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_EVENTS_TERRAFORM_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_TERRAFORM_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_EVENTS_TERRAFORM_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_CODEBASE_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_PDF_GENERATOR_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TEXT_EXTRACTOR_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_CODEBASE_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-terraform/pipeline-events-terraform/*')
                  {
                    echo "PROD: run pipeline events terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_EVENTS_TERRAFORM_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-terraform/ui-terraform/*')
                  {
                    echo "PROD: run ui terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_UI_TERRAFORM_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_EVENTS_TERRAFORM_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_UI_CODEBASE_PROD;isOutput=true]true"                    
                  }
                  if ($name -like 'polaris-terraform/ui-events-terraform/*')
                  {
                    echo "PROD: run ui events terraform..."
                    Write-Host "##vso[task.setvariable variable=RUN_UI_EVENTS_TERRAFORM_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/*')
                  {
                    echo "PROD: run pipeline codebase..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_CODEBASE_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/coordinator/*')
                  {
                    echo "PROD: run coordinator..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/pdf-generator/*')
                  {
                    echo "PROD: run pdf generator..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_PDF_GENERATOR_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/text-extractor/*')
                  {
                    echo "PROD: run text extractor..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TEXT_EXTRACTOR_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/*')
                  {
                    echo "PROD: run gateway codebase..."
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/polaris-gateway/*')
                  {
                    echo "PROD: run gateway..."
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/polaris-auth-handover/*')
                  {
                    echo "PROD: run auth handover..."
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-ui/*')
                  {
                    echo "PROD: run ui codebase..."
                    Write-Host "##vso[task.setvariable variable=RUN_UI_CODEBASE_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/DdeiClient/*')
                  {
                    echo "PROD: changes to DdeiClient detected run dependent code-bases..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-pipeline/Common/*')
                  {
                    echo "PROD: changes to the Pipeline's Common library detected run dependent code-bases..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_PDF_GENERATOR_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_TEXT_EXTRACTOR_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_CODEBASE_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_PROD;isOutput=true]true"
                  }
                  if ($name -like 'polaris-gateway/polaris-gateway.common/*')
                  {
                    echo "PROD: changes to the Gateway's Common library detected run dependent code-bases..."
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_CODEBASE_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_PIPELINE_COORDINATOR_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_AUTH_HANDOVER_PROD;isOutput=true]true"
                    Write-Host "##vso[task.setvariable variable=RUN_GATEWAY_GATEWAY_PROD;isOutput=true]true"
                  }
                }
            name: Change_Results
            displayName: Processing changes to repo

      - template: jobs/job_log-result.yml
        parameters:
          targetBuild: ${{ parameters.targetBuild }}
          targetLabel: ${{ parameters.targetLabel }}
          targetName: ${{ parameters.targetName }}
          appInsightsKey: ${{ parameters.appInsightsKey }}
          devOpsPatToken: ${{ parameters.devOpsPatToken }}
          jobDependsOn:
            - LogStart
            - Generate_Diff_${{ parameters.targetLabel }}
