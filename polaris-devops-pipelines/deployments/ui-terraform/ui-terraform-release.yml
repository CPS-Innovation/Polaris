---
trigger: none
pr: none

resources:
  pipelines:
    - pipeline: UITerraformBuild
      source: Polaris UI Terraform - Build
      trigger:
        branches:
          include:
            - refs/heads/main
        stages:
          - Publish_Artifacts

variables:
  - group: kv-dev-terraform
  - group: kv-qa-terraform
  - group: kv-prod-terraform
  - group: polaris-global
  - group: terraform-containers
  - group: polaris-status-check-endpoints

stages:
  # deploy UI terraform to DEV
  - template: ../templates/stages/stage_deploy-ui-terraform.yml
    parameters:
      stageBuildAgent: $(dev-build-agent)
      stageDependsOn:
      envLabel: "Dev"
      targetBuild: UITerraformBuild
      targetLabel: "DEV"
      targetSuffix: "-dev"
      targetPlanName: "dev"
      appInsightsKey: "$(innovation-development-app-insights-instrumentation-key)"
      terraformStorageAccount: $(dev-terraform-storage-account)
      terraformUIContainerName: $(ui-terraform-container-name)
      terraformUIEventsContainerName: $(ui-events-terraform-container-name)
      terraformStateKey: $(terraform-key)
      terraformStateAccessKey: $(cpsdevstorageterraform-key1)
      armClientId: $(innovation-development-spn-client-id)
      armClientSecret: $(innovation-development-spn-secret)
      armTenantId: $(innovation-development-spn-tenant-id)
      armSubscriptionId: $(innovation-development-subscription-id)
      devOpsPatToken: $(devops-pat-token)
      azureSubscription: $(dev-azure-subscription)
      logRetentionTime: $(log-retention-time)
      totalLogRetentionTime: $(total-log-retention-time)

  # check status of UI components on DEV
  - template: ../templates/stages/stage_status-checks-ui-terraform.yml
    parameters:
      stageBuildAgent: $(dev-build-agent)
      stageDependsOn: Terraform_DEV
      targetBuild: UITerraformBuild
      targetSuffix: "-dev"
      targetLabel: "DEV"
      targetName: "UI Terraform CI Deployment"
      appInsightsKey: "$(innovation-development-app-insights-instrumentation-key)"
      authHandoverStatusUrl: $(dev-auth-handover-status-url)
      gatewayStatusUrl: $(dev-gateway-status-url)
      proxyStatusUrl: $(dev-proxy-status-url)
      spaStatusUrl: $(dev-ui-status-url)
      statusCheckMethod: $(status-check-method)
      statusCheckRetries: $(status-check-retries)
      statusCheckDelaySeconds: $(status-check-delay-seconds)
      statusCheckTimeoutSeconds: $(status-check-timeout-seconds)
      armClientId: $(innovation-development-spn-client-id)
      armClientSecret: $(innovation-development-spn-secret)
      armTenantId: $(innovation-development-spn-tenant-id)
      armSubscriptionId: $(innovation-development-subscription-id)
      devOpsPatToken: "$(devops-pat-token)"

  # run DEV e2e tests
  - template: ../templates/stages/stage_run-e2e-tests.yml
    parameters:
      stageBuildAgent: $(dev-build-agent)
      targetBuild: UITerraformBuild
      targetLabel: "DEV"
      targetName: "e2e Tests"
      buildDefinitionId: 129
      appInsightsKey: "$(innovation-development-app-insights-instrumentation-key)"
      devOpsPatToken: "$(devops-pat-token)"
      targetTestEnv: "dev"
      
  # Swap DEV
  - template: ../templates/stages/stage_swap-ui-slots.yml
    parameters:
      buildAgent: $(dev-build-agent)
      targetSuffix: "-dev"
      targetBuild: UITerraformBuild
      targetLabel: "DEV"
      azureSubscription: $(dev-azure-subscription)
      appInsightsKey: $(innovation-development-app-insights-instrumentation-key)
      devOpsPatToken: $(devops-pat-token)

  # deploy UI terraform to QA
  - template: ../templates/stages/stage_deploy-ui-terraform.yml
    parameters:
      stageBuildAgent: $(qa-build-agent)
      stageDependsOn: Swap_DEV
      envLabel: "QA"
      targetBuild: UITerraformBuild
      targetLabel: "QA"
      targetSuffix: "-qa"
      targetPlanName: "qa"
      appInsightsKey: "$(innovation-qa-app-insights-instrumentation-key)"
      terraformStorageAccount: $(qa-terraform-storage-account)
      terraformUIContainerName: $(ui-terraform-container-name)
      terraformUIEventsContainerName: $(ui-events-terraform-container-name)
      terraformStateKey: $(terraform-key)
      terraformStateAccessKey: $(cpsqastorageterraform-key1)
      armClientId: $(innovation-qa-spn-client-id)
      armClientSecret: $(innovation-qa-spn-secret)
      armTenantId: $(innovation-qa-spn-tenant-id)
      armSubscriptionId: $(innovation-qa-subscription-id)
      devOpsPatToken: $(devops-pat-token)
      azureSubscription: $(qa-azure-subscription)
      logRetentionTime: $(log-retention-time)
      totalLogRetentionTime: $(total-log-retention-time)

  # check status of UI components on QA
  - template: ../templates/stages/stage_status-checks-ui-terraform.yml
    parameters:
      stageBuildAgent: $(qa-build-agent)
      stageDependsOn: Terraform_QA
      targetBuild: UITerraformBuild
      targetSuffix: "-qa"
      targetLabel: "QA"
      targetName: "UI Terraform CI Deployment"
      appInsightsKey: "$(innovation-qa-app-insights-instrumentation-key)"
      authHandoverStatusUrl: $(qa-auth-handover-status-url)
      gatewayStatusUrl: $(qa-gateway-status-url)
      proxyStatusUrl: $(qa-proxy-status-url)
      spaStatusUrl: $(qa-ui-status-url)
      statusCheckMethod: $(status-check-method)
      statusCheckRetries: $(status-check-retries)
      statusCheckDelaySeconds: $(status-check-delay-seconds)
      statusCheckTimeoutSeconds: $(status-check-timeout-seconds)
      armClientId: $(innovation-qa-spn-client-id)
      armClientSecret: $(innovation-qa-spn-secret)
      armTenantId: $(innovation-qa-spn-tenant-id)
      armSubscriptionId: $(innovation-qa-subscription-id)
      devOpsPatToken: "$(devops-pat-token)"

  # run QA e2e tests
  - template: ../templates/stages/stage_run-e2e-tests.yml
    parameters:
      stageBuildAgent: $(qa-build-agent)
      targetBuild: UITerraformBuild
      targetLabel: "QA"
      targetName: "e2e Tests"
      buildDefinitionId: 210
      appInsightsKey: "$(innovation-qa-app-insights-instrumentation-key)"
      devOpsPatToken: "$(devops-pat-token)"
      targetTestEnv: "qa"
      
  # Swap QA
  - template: ../templates/stages/stage_swap-ui-slots.yml
    parameters:
      buildAgent: $(qa-build-agent)
      targetSuffix: "-qa"
      targetBuild: UITerraformBuild
      targetLabel: "QA"
      azureSubscription: $(qa-azure-subscription)
      appInsightsKey: $(innovation-qa-app-insights-instrumentation-key)
      devOpsPatToken: $(devops-pat-token)

  # deploy UI terraform to PROD
  - template: ../templates/stages/stage_deploy-ui-terraform.yml
    parameters:
      stageBuildAgent: $(prod-build-agent)
      stageDependsOn: Swap_DEV
      envLabel: "Prod"
      targetBuild: UITerraformBuild
      targetLabel: "PROD"
      targetSuffix: ""
      targetPlanName: "prod"
      appInsightsKey: "$(innovation-prod-app-insights-instrumentation-key)"
      terraformStorageAccount: $(prod-terraform-storage-account)
      terraformUIContainerName: $(ui-terraform-container-name)
      terraformUIEventsContainerName: $(ui-events-terraform-container-name)
      terraformStateKey: $(terraform-key)
      terraformStateAccessKey: $(cpsprodstorageterraform-key1)
      armClientId: $(innovation-prod-spn-client-id)
      armClientSecret: $(innovation-prod-spn-secret)
      armTenantId: $(innovation-prod-spn-tenant-id)
      armSubscriptionId: $(innovation-prod-subscription-id)
      devOpsPatToken: $(devops-pat-token)
      azureSubscription: $(prod-azure-subscription)
      logRetentionTime: $(log-retention-time)
      totalLogRetentionTime: $(total-log-retention-time)

  # check status of UI components on PROD
  - template: ../templates/stages/stage_status-checks-ui-terraform.yml
    parameters:
      stageBuildAgent: $(prod-build-agent)
      stageDependsOn: Terraform_PROD
      targetBuild: UITerraformBuild
      targetLabel: "PROD"
      targetSuffix: ""
      targetName: "Pipeline Terraform CI Deployment"
      appInsightsKey: "$(innovation-prod-app-insights-instrumentation-key)"
      authHandoverStatusUrl: $(prod-auth-handover-status-url)
      gatewayStatusUrl: $(prod-gateway-status-url)
      proxyStatusUrl: $(prod-proxy-status-url)
      spaStatusUrl: $(prod-ui-status-url)
      statusCheckMethod: $(status-check-method)
      statusCheckRetries: $(status-check-retries)
      statusCheckDelaySeconds: $(status-check-delay-seconds)
      statusCheckTimeoutSeconds: $(status-check-timeout-seconds)
      armClientId: $(innovation-prod-spn-client-id)
      armClientSecret: $(innovation-prod-spn-secret)
      armTenantId: $(innovation-prod-spn-tenant-id)
      armSubscriptionId: $(innovation-prod-subscription-id)
      devOpsPatToken: "$(devops-pat-token)"

  # run PROD e2e tests
  - template: ../templates/stages/stage_run-e2e-tests.yml
    parameters:
      stageBuildAgent: $(prod-build-agent)
      targetBuild: UITerraformBuild
      targetLabel: "PROD"
      targetName: "e2e Tests"
      buildDefinitionId: 240
      appInsightsKey: "$(innovation-prod-app-insights-instrumentation-key)"
      devOpsPatToken: "$(devops-pat-token)"
      targetTestEnv: "prod"
      
  # Swap PROD
  - template: ../templates/stages/stage_swap-ui-slots.yml
    parameters:
      buildAgent: $(qa-build-agent)
      targetSuffix: ""
      targetBuild: UITerraformBuild
      targetLabel: "PROD"
      azureSubscription: $(prod-azure-subscription)
      appInsightsKey: $(innovation-prod-app-insights-instrumentation-key)
      devOpsPatToken: $(devops-pat-token)
