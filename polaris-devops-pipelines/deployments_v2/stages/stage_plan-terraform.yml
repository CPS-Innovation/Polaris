---
parameters:
  - name: targetBuild
    type: string
  - name: azureSubscription
    type: string
  - name: targetPlanName
    type: string
  - name: terraformStorageAccount
    type: string
  - name: mainTerraformContainerName
    type: string
  - name: indexTerraformContainerName
    type: string
  - name: terraformStateKey
    type: string
  - name: terraformStateAccessKey
    type: string


stages:
  - stage: Plan
    displayName: Plan Terraform
    jobs:
      - deployment: Wait_For_Running_Builds
        strategy:
          runOnce:
            deploy:
              steps:
                - template: jobs/tasks/task_wait-for-running-releases.yml
                  parameters:
                    devOpsPatToken: $(System.AccessToken)


      - deployment: Plan_Main_Terraform
        condition: succeeded()
        dependsOn: Wait_For_Running_Builds
        displayName: Plan Main Terraform
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - template: jobs/tasks/task_get-credentials.yml
                  parameters:
                    azureSubscription: ${{ parameters.azureSubscription }}

                - template: jobs/tasks/task_plan-terraform.yml
                  parameters:
                    targetBuild: ${{ parameters.targetBuild }}
                    targetTerraformArtifact: "main-terraform-files"
                    targetPlanName: ${{ parameters.targetPlanName }}
                    terraformStorageAccount: ${{ parameters.terraformStorageAccount }}
                    terraformContainerName: ${{ parameters.mainTerraformContainerName }}
                    terraformStateKey: ${{ parameters.terraformStateKey }}
                    terraformStateAccessKey: ${{ parameters.terraformStateAccessKey }}
                    armClientId: $(clientId)
                    armClientSecret: $(clientSecret)
                    armTenantId: $(tenantId)
                    armSubscriptionId: $(subscriptionId)