---
parameters:
  - name: targetBuild
    type: string
  - name: targetLabel
    type: string
  - name: appInsightsKey
    type: string
  - name: targetSuffix
    type: string
  - name: azureSubscription
    type: string
  - name: statusCheckMethod
    type: string
  - name: statusCheckRetries
    type: string
  - name: statusCheckDelaySeconds
    type: string
  - name: statusCheckTimeoutSeconds
    type: string
  
stages:
  - stage: Check_Status
    displayName: Status Checks
    dependsOn: Swap
    condition: succeeded()
    jobs:
      - job: Log_Start
        displayName: Log Start
        condition: succeeded()
        steps:
          - template: jobs/tasks/task_log-start.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetName: "Status Checks"
              appInsightsKey: ${{ parameters.appInsightsKey }}

      - job: Get_Status_URIs
        dependsOn: Log_Start
        condition: succeeded()
        displayName: Get Status URIs
        steps:
          - template: jobs/tasks/task_get-credentials.yml
            parameters:
              azureSubscription: ${{ parameters.azureSubscription }}

          - template: jobs/tasks/task_get-status-uris.yml
            parameters:
              targetSuffix: ${{ parameters.targetSuffix }}
              armClientId: $(clientId)
              armClientSecret: $(clientSecret)
              armTenantId: $(tenantId)
              armSubscriptionId: $(subscriptionId)

      - job: Check_Coordinator
        dependsOn: Get_Status_URIs
        condition: succeeded()
        displayName: Check Coordinator
        variables:
          uri: $[dependencies.Get_Status_URIs.outputs['uris.coordinatorUri']]
        steps:
          - template: jobs/tasks/task_call-status-endpoint.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetAppName: "Coordinator"
              targetScript: "InvokeRequestWithRetry.ps1"
              endpointUri: "$(uri)/api/status"
              statusCheckMethod: ${{ parameters.statusCheckMethod }}
              statusCheckRetries: ${{ parameters.statusCheckRetries }}
              statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
              statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}
              successTextContent: $(resources.pipeline.PolarisBuild.runName)

      - job: Check_PDF_Generator
        dependsOn: Get_Status_URIs
        condition: succeeded()
        displayName: Check PDF Generator
        variables:
          uri: $[dependencies.Get_Status_URIs.outputs['uris.pdfGeneratorUri']]
        steps:
          - template: jobs/tasks/task_call-status-endpoint.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetAppName: "PDF Generator"
              targetScript: "InvokeRequestWithRetry.ps1"
              endpointUri: "$(uri)/api/status"
              statusCheckMethod: ${{ parameters.statusCheckMethod }}
              statusCheckRetries: ${{ parameters.statusCheckRetries }}
              statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
              statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}
              successTextContent: $(resources.pipeline.PolarisBuild.runName)

      - job: Check_PDF_Thumbnail_Generator
        dependsOn: Get_Status_URIs
        condition: succeeded()
        displayName: Check PDF Thumbnail Generator
        variables:
          uri: $[dependencies.Get_Status_URIs.outputs['uris.pdfThumbnailGeneratorUri']]
        steps:
          - template: jobs/tasks/task_call-status-endpoint.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetAppName: "PDF Thumbnail Generator"
              targetScript: "InvokeRequestWithRetry.ps1"
              endpointUri: "$(uri)/api/status"
              statusCheckMethod: ${{ parameters.statusCheckMethod }}
              statusCheckRetries: ${{ parameters.statusCheckRetries }}
              statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
              statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}
              successTextContent: $(resources.pipeline.PolarisBuild.runName)

      - job: Check_PDF_Redactor
        dependsOn: Get_Status_URIs
        condition: succeeded()
        displayName: Check PDF Redactor
        variables:
          uri: $[dependencies.Get_Status_URIs.outputs['uris.pdfRedactorUri']]
        steps:
          - template: jobs/tasks/task_call-status-endpoint.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetAppName: "PDF Redactor"
              targetScript: "InvokeRequestWithRetry.ps1"
              endpointUri: "$(uri)/api/status"
              statusCheckMethod: ${{ parameters.statusCheckMethod }}
              statusCheckRetries: ${{ parameters.statusCheckRetries }}
              statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
              statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}
              successTextContent: $(resources.pipeline.PolarisBuild.runName)

      - job: Check_Text_Extractor
        dependsOn: Get_Status_URIs
        condition: succeeded()
        displayName: Check Text Extractor
        variables:
          uri: $[dependencies.Get_Status_URIs.outputs['uris.textExtractorUri']]
        steps:
          - template: jobs/tasks/task_call-status-endpoint.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetAppName: "Text Extractor"
              targetScript: "InvokeRequestWithRetry.ps1"
              endpointUri: "$(uri)/api/status"
              statusCheckMethod: ${{ parameters.statusCheckMethod }}
              statusCheckRetries: ${{ parameters.statusCheckRetries }}
              statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
              statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}
              successTextContent: $(resources.pipeline.PolarisBuild.runName)

      - job: Check_Gateway
        dependsOn: Get_Status_URIs
        condition: succeeded()
        displayName: Check Gateway
        variables:
          uri: $[dependencies.Get_Status_URIs.outputs['uris.gatewayUri']]
        steps:
          - template: jobs/tasks/task_call-status-endpoint.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetAppName: "Gateway"
              targetScript: "InvokeRequestWithRetry.ps1"
              endpointUri: "$(uri)/api/status"
              statusCheckMethod: ${{ parameters.statusCheckMethod }}
              statusCheckRetries: ${{ parameters.statusCheckRetries }}
              statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
              statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}
              successTextContent: $(resources.pipeline.PolarisBuild.runName)

      - job: Check_Proxy
        dependsOn: Get_Status_URIs
        condition: succeeded()
        displayName: Check Proxy
        variables:
          uri: $[dependencies.Get_Status_URIs.outputs['uris.proxyUri']]
        steps:
          - template: jobs/tasks/task_call-status-endpoint.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetAppName: "Proxy"
              targetScript: "InvokeRequestWithRetryNonNumeric.ps1"
              endpointUri: "$(uri)/"
              statusCheckMethod: ${{ parameters.statusCheckMethod }}
              statusCheckRetries: ${{ parameters.statusCheckRetries }}
              statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
              statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}
              successTextContent: "Polaris Proxy is online"

      - job: Check_SPA
        dependsOn: Get_Status_URIs
        condition: succeeded()
        displayName: Check SPA
        variables:
          uri: $[dependencies.Get_Status_URIs.outputs['uris.spaUri']]
        steps:
          - template: jobs/tasks/task_call-status-endpoint.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetAppName: "UI"
              targetScript: "InvokeRequestWithRetry.ps1"
              endpointUri: "$(uri)/polaris-ui/build-version.txt"
              statusCheckMethod: ${{ parameters.statusCheckMethod }}
              statusCheckRetries: ${{ parameters.statusCheckRetries }}
              statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
              statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}
              successTextContent: $(resources.pipeline.PolarisBuild.runName)

      - job: Log_Result
        condition: succeeded()
        displayName: Log End
        dependsOn:
          - Log_Start
          - Get_Status_URIs
          - Check_Coordinator
          - Check_PDF_Generator
          - Check_PDF_Thumbnail_Generator
          - Check_PDF_Redactor
          - Check_Text_Extractor
          - Check_Gateway
          - Check_Proxy
          - Check_SPA
        steps:
          - template: jobs/tasks/task_log-result.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetName: "Status Checks"
              appInsightsKey: ${{ parameters.appInsightsKey }}
              devOpsPatToken: $(System.AccessToken)