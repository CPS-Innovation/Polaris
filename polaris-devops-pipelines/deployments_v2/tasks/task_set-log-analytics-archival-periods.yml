---
parameters:
  - name: targetBuild
    type: string
  - name: targetLabel
    type: string
  - name: targetName
    type: string
  - name: targetSuffix
    type: string
  - name: appInsightsKey
    type: string
  - name: armClientId
    type: string
  - name: armClientSecret
    type: string
  - name: armTenantId
    type: string
  - name: armSubscriptionId
    type: string
  - name: logRetentionTime
    type: string
  - name: totalLogRetentionTime
    type: string

steps:
  # download scripts artifact
  - download: ${{ parameters.targetBuild }}
    displayName: Download Scripts
    artifact: 'polaris-script-files'

  # send custom event to AppInsights
  - template: task_send-to-app-insights.yml
    parameters:
      appInsightsKey: ${{ parameters.appInsightsKey }}
      targetBuild: ${{ parameters.targetBuild }}
      message: "${{ parameters.targetLabel }} ${{ parameters.targetName }}: Set Log Analytics Archival Periods - Started"

  # Set Log Analytics Archival Period - remove when supported natively by Terraform
  - bash: |
      az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
      az account set --subscription $ARM_SUBSCRIPTION_ID
      az monitor log-analytics workspace table update --resource-group rg-polaris-analytics$ARM_SUFFIX --workspace-name la-polaris$ARM_SUFFIX --name AppEvents --retention-time $LOG_RETENTION_TIME --total-retention-time $TOTAL_LOG_RETENTION_TIME --subscription $ARM_SUBSCRIPTION_ID
      az monitor log-analytics workspace table update --resource-group rg-polaris-analytics$ARM_SUFFIX --workspace-name la-polaris$ARM_SUFFIX --name AppRequests --retention-time $LOG_RETENTION_TIME --total-retention-time $TOTAL_LOG_RETENTION_TIME --subscription $ARM_SUBSCRIPTION_ID
      az monitor log-analytics workspace table update --resource-group rg-polaris-analytics$ARM_SUFFIX --workspace-name la-polaris$ARM_SUFFIX --name AppServiceConsoleLogs --retention-time $LOG_RETENTION_TIME --total-retention-time $TOTAL_LOG_RETENTION_TIME --subscription $ARM_SUBSCRIPTION_ID
    displayName: Script > Set Log Analytics Archival Periods
    env:
      ARM_CLIENT_ID: ${{ parameters.armClientId }}
      ARM_CLIENT_SECRET: ${{ parameters.armClientSecret }}
      ARM_TENANT_ID: ${{ parameters.armTenantId }}
      ARM_SUBSCRIPTION_ID: ${{ parameters.armSubscriptionId }}
      LOG_RETENTION_TIME: ${{ parameters.logRetentionTime }}
      TOTAL_LOG_RETENTION_TIME: ${{ parameters.totalLogRetentionTime }}
      ARM_SUFFIX: ${{ parameters.targetSuffix }}

  # send custom event to AppInsights
  - template: task_send-to-app-insights.yml
    parameters:
      appInsightsKey: ${{ parameters.appInsightsKey }}
      targetBuild: ${{ parameters.targetBuild }}
      message: "${{ parameters.targetLabel }} ${{ parameters.targetName }}: Set Log Analytics Archival Periods - Completed"