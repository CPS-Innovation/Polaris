---
parameters:
  - name: targetBuild
    type: string
  - name: targetLabel
    type: string
  - name: targetName
    type: string
  - name: targetSuffix
    type: string
  - name: appInsightsKey
    type: string
  - name: azureSubscription
    type: string
  - name: azureSubscriptionId
    type: string
  - name: targetResourceGroup
    type: string
    
steps:
  # download pipeline terraform build artifact, which also contains the logic app definitions
  - download: ${{ parameters.targetBuild }}
    displayName: Logic App > Download Build
    artifact: "logic-app-source"
    
  # create candidate folder  
  - task: CopyFiles@2
    displayName: Logic App > Create Definition
    inputs:
      SourceFolder: '$(Pipeline.Workspace)/${{ parameters.targetBuild }}/logic-app-source/logic-app-definitions'
      Contents: |
        host.json
        connections.json
        alert-processor/**
      TargetFolder: '$(Pipeline.Workspace)/${{ parameters.targetBuild }}/logic-app-source/logic-app-definitions/alert-processor${{ parameters.targetSuffix }}'
   
  # replace values in template   
  - task: Bash@3
    displayName: Logic App > Replace Values
    inputs:
      targetType: "inline"
      script: |
        sed -i 's/__subscriptionId__/${{ parameters.azureSubscriptionId }}/' '$(Pipeline.Workspace)/${{ parameters.targetBuild }}/logic-app-source/logic-app-definitions/alert-processor${{ parameters.targetSuffix }}/connections.json'
        sed -i 's/__resourceGroup__/${{ parameters.targetResourceGroup }}/' '$(Pipeline.Workspace)/${{ parameters.targetBuild }}/logic-app-source/logic-app-definitions/alert-processor${{ parameters.targetSuffix }}/connections.json'
    
  # prepare a zip
  - task: ArchiveFiles@2
    displayName: Logic App > Zip
    inputs:
      rootFolderOrFile: '$(Pipeline.Workspace)/${{ parameters.targetBuild }}/logic-app-source/logic-app-definitions/alert-processor${{ parameters.targetSuffix }}'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Pipeline.Workspace)/$(Build.BuildId)_alert-processor${{ parameters.targetSuffix }}.zip'
      replaceExistingArchive: true
      
  - task: AzureFunctionApp@1
    displayName: Logic App > Publish
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      appType: 'functionApp'
      appName: "send-alert-teams{{ parameters.targetSuffix }}"
      package: '$(Pipeline.Workspace)/$(Build.BuildId)_alert-processor${{ parameters.targetSuffix }}.zip'
      deploymentMethod: "zipDeploy"
