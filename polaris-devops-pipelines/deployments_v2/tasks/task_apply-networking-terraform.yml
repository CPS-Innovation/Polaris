---
parameters:
  - name: targetBuild
    type: string
  - name: targetTerraformArtifact
    type: string
  - name: targetLabel
    type: string
  - name: targetName
    type: string
  - name: targetPlanName
    type: string
  - name: terraformStorageAccount
    type: string
  - name: terraformContainerName
    type: string
  - name: terraformStateKey
    type: string
  - name: terraformStateAccessKey
    type: string
  - name: armClientId
    type: string
  - name: armClientSecret
    type: string
  - name: armTenantId
    type: string
  - name: armSubscriptionId
    type: string


steps:
  # download pipeline terraform build artifact
  - download: ${{ parameters.targetBuild }}
    displayName: Terraform > Download Terraform build
    artifact: ${{ parameters.targetTerraformArtifact }}

  # Terraform Init
  - bash: |
      terraform init \
        -backend-config="storage_account_name=$TF_STATE_ACCOUNT_NAME" \
        -backend-config="container_name=$TF_STATE_CONTAINER_NAME" \
        -backend-config="key=$TF_STATE_KEY" \
        -backend-config="access_key=$TF_STATE_ACCESS_KEY"
    displayName: Terraform > Init
    workingDirectory: $(Pipeline.Workspace)/${{ parameters.targetBuild }}/${{ parameters.targetTerraformArtifact }}
    env:
      TF_STATE_ACCOUNT_NAME: ${{ parameters.terraformStorageAccount }}
      TF_STATE_CONTAINER_NAME: ${{ parameters.terraformContainerName }}
      TF_STATE_KEY: ${{ parameters.terraformStateKey }}
      TF_STATE_ACCESS_KEY: ${{ parameters.terraformStateAccessKey }}
      TF_LOG: "ERROR"

  # Terraform Plan
  - bash: |
      terraform plan -input=false -out="$ARM_ENV.tfplan" -var-file="$ARM_ENV.tfvars"
    displayName: Terraform > Write Plan
    workingDirectory: $(Pipeline.Workspace)/${{ parameters.targetBuild }}/${{ parameters.targetTerraformArtifact }}
    env:
      ARM_CLIENT_ID: ${{ parameters.armClientId }}
      ARM_CLIENT_SECRET: ${{ parameters.armClientSecret }}
      ARM_TENANT_ID: ${{ parameters.armTenantId }}
      ARM_SUBSCRIPTION_ID: ${{ parameters.armSubscriptionId }}
      ARM_ENV: ${{ parameters.targetPlanName }}
      TF_LOG: "ERROR"

  # Terraform Apply
  - bash: |
      terraform apply -auto-approve "$ARM_ENV.tfplan"
    displayName: Terraform > Apply
    workingDirectory: $(Pipeline.Workspace)/${{ parameters.targetBuild }}/${{ parameters.targetTerraformArtifact }}
    env:
      ARM_CLIENT_ID: ${{ parameters.armClientId }}
      ARM_CLIENT_SECRET: ${{ parameters.armClientSecret }}
      ARM_TENANT_ID: ${{ parameters.armTenantId }}
      ARM_SUBSCRIPTION_ID: ${{ parameters.armSubscriptionId }}
      ARM_ENV: ${{ parameters.targetPlanName }}
      TF_LOG: "ERROR"
